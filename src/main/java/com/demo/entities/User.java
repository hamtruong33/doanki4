package com.demo.entities;
// Generated Nov 2, 2018 11:27:01 PM by Hibernate Tools 5.2.10.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.validation.constraints.NotEmpty;

import org.hibernate.validator.constraints.Length;

import javax.validation.constraints.Email;
/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "multivendor")
public class User implements java.io.Serializable {

	private Integer id;
	@NotEmpty(groups = { Group1.class,Group2.class })
	@Length(min = 3, max = 10,groups = { Group1.class,Group2.class })
	private String username;
	@NotEmpty(groups = { Group1.class })
	private String password;
	private String fullName;
	@NotEmpty(groups = { Group1.class,Group2.class })
	@Email(groups = { Group1.class,Group2.class })
	private String email;
	private String address;
	private Integer phone;
	private String token;
	private String photo;
	private Boolean status;
	private Set<Roleforuser> roleforusers = new HashSet<Roleforuser>(0);
	private Set<Orders> orderses = new HashSet<Orders>(0);
	private Set<Review> reviews = new HashSet<Review>(0);
	
	
	
	public User(Integer id,
			@NotEmpty(groups = { Group1.class, Group2.class }) @Length(min = 3, max = 10, groups = {
					Group1.class, Group2.class }) String username,
			@NotEmpty(groups = Group1.class) String password, String fullName,
			@NotEmpty(groups = { Group1.class, Group2.class }) @Email(groups = { Group1.class,
					Group2.class }) String email,
			String address, Integer phone, String token, String photo, Boolean status, Set<Roleforuser> roleforusers,
			Set<Orders> orderses, Set<Review> reviews) {
		super();
		this.id = id;
		this.username = username;
		this.password = password;
		this.fullName = fullName;
		this.email = email;
		this.address = address;
		this.phone = phone;
		this.token = token;
		this.photo = photo;
		this.status = status;
		this.roleforusers = roleforusers;
		this.orderses = orderses;
		this.reviews = reviews;
	}

	public Boolean getStatus() {
		return status;
	}

	public void setStatus(Boolean status) {
		this.status = status;
	}

	public User(Integer id,
			@NotEmpty(groups = { Group1.class, Group2.class }) @Length(min = 3, max = 10, groups = {
					Group1.class, Group2.class }) String username,
			@NotEmpty(groups = Group1.class) String password, String fullName,
			@NotEmpty(groups = { Group1.class, Group2.class }) @Email(groups = { Group1.class,
					Group2.class }) String email,
			String address, Integer phone, String token, String photo, Set<Roleforuser> roleforusers,
			Set<Orders> orderses, Set<Review> reviews) {
		super();
		this.id = id;
		this.username = username;
		this.password = password;
		this.fullName = fullName;
		this.email = email;
		this.address = address;
		this.phone = phone;
		this.token = token;
		this.photo = photo;
		this.roleforusers = roleforusers;
		this.orderses = orderses;
		this.reviews = reviews;
	}

	public String getPhoto() {
		return photo;
	}

	public void setPhoto(String photo) {
		this.photo = photo;
	}

	public User(Integer id, @NotEmpty(groups = { Group1.class, Group2.class }) String username,
			@NotEmpty(groups = Group1.class) String password, String fullName,
			@NotEmpty(groups = { Group1.class, Group2.class }) @Email(groups = { Group1.class,
					Group2.class }) String email,
			String address, Integer phone, String token, Set<Roleforuser> roleforusers, Set<Orders> orderses,
			Set<Review> reviews) {
		super();
		this.id = id;
		this.username = username;
		this.password = password;
		this.fullName = fullName;
		this.email = email;
		this.address = address;
		this.phone = phone;
		this.token = token;
		this.roleforusers = roleforusers;
		this.orderses = orderses;
		this.reviews = reviews;
	}

	public String getToken() {
		return token;
	}

	public void setToken(String token) {
		this.token = token;
	}

	public User() {
	}

	public User(String username, String password, String email, String address) {
		this.username = username;
		this.password = password;
		this.email = email;
		this.address = address;
	}

	public User(String username, String password, String fullName, String email, String address, Integer phone,
			Set<Roleforuser> roleforusers, Set<Orders> orderses, Set<Review> reviews) {
		this.username = username;
		this.password = password;
		this.fullName = fullName;
		this.email = email;
		this.address = address;
		this.phone = phone;
		this.roleforusers = roleforusers;
		this.orderses = orderses;
		this.reviews = reviews;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "username", nullable = false, length = 250)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", nullable = false, length = 250)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "fullName", length = 250)
	public String getFullName() {
		return this.fullName;
	}

	public void setFullName(String fullName) {
		this.fullName = fullName;
	}

	@Column(name = "email", nullable = false, length = 250)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "address", nullable = false, length = 250)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "phone")
	public Integer getPhone() {
		return this.phone;
	}

	public void setPhone(Integer phone) {
		this.phone = phone;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "user_role", catalog = "multivendor", joinColumns = {
			@JoinColumn(name = "user_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "role_id", nullable = false, updatable = false) })
	public Set<Roleforuser> getRoleforusers() {
		return this.roleforusers;
	}

	public void setRoleforusers(Set<Roleforuser> roleforusers) {
		this.roleforusers = roleforusers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Orders> getOrderses() {
		return this.orderses;
	}

	public void setOrderses(Set<Orders> orderses) {
		this.orderses = orderses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Review> getReviews() {
		return this.reviews;
	}

	public void setReviews(Set<Review> reviews) {
		this.reviews = reviews;
	}

}
