package com.demo.entities;
// Generated Nov 9, 2018 10:23:40 AM by Hibernate Tools 5.2.10.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Shop generated by hbm2java
 */
@Entity
@Table(name = "shop", catalog = "multivendor")
public class Shop implements java.io.Serializable {

	private Integer id;
	private Membership membership;
	private String name;
	private String description;
	private Double vote;
	private String username;
	private String password;
	private int identityCard;
	private Date dateCreated;
	private Integer bankNumber;
	private boolean status;
	private String email;
	private Set<Roleforuser> roleforusers = new HashSet<Roleforuser>(0);
	private Set<Product> products = new HashSet<Product>(0);

	public Shop() {
	}

	public Shop(Membership membership, String name, String username, String password, int identityCard,
			Date dateCreated, boolean status) {
		this.membership = membership;
		this.name = name;
		this.username = username;
		this.password = password;
		this.identityCard = identityCard;
		this.dateCreated = dateCreated;
		this.status = status;
	}

	public Shop(Membership membership, String name, String description, Double vote, String username, String password,
			int identityCard, Date dateCreated, Integer bankNumber, boolean status, Set<Roleforuser> roleforusers,
			Set<Product> products) {
		this.membership = membership;
		this.name = name;
		this.description = description;
		this.vote = vote;
		this.username = username;
		this.password = password;
		this.identityCard = identityCard;
		this.dateCreated = dateCreated;
		this.bankNumber = bankNumber;
		this.status = status;
		this.roleforusers = roleforusers;
		this.products = products;
	}

	@Column(name = "email", nullable = false, length = 250)
	public String getEmail() {
		return this.email;
	}

	public Shop(Integer id, Membership membership, String name, String description, Double vote, String username,
			String password, int identityCard, Date dateCreated, Integer bankNumber, boolean status, String email,
			Set<Roleforuser> roleforusers, Set<Product> products) {
		super();
		this.id = id;
		this.membership = membership;
		this.name = name;
		this.description = description;
		this.vote = vote;
		this.username = username;
		this.password = password;
		this.identityCard = identityCard;
		this.dateCreated = dateCreated;
		this.bankNumber = bankNumber;
		this.status = status;
		this.email = email;
		this.roleforusers = roleforusers;
		this.products = products;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "membershipid", nullable = false)
	public Membership getMembership() {
		return this.membership;
	}

	public void setMembership(Membership membership) {
		this.membership = membership;
	}

	@Column(name = "name", nullable = false, length = 250)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description", length = 250)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "vote", precision = 22, scale = 0)
	public Double getVote() {
		return this.vote;
	}

	public void setVote(Double vote) {
		this.vote = vote;
	}

	@Column(name = "username", nullable = false, length = 250)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", nullable = false, length = 250)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "identity_card", nullable = false)
	public int getIdentityCard() {
		return this.identityCard;
	}

	public void setIdentityCard(int identityCard) {
		this.identityCard = identityCard;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_Created", nullable = false, length = 19)
	public Date getDateCreated() {
		return this.dateCreated;
	}

	public void setDateCreated(Date dateCreated) {
		this.dateCreated = dateCreated;
	}

	@Column(name = "bankNumber")
	public Integer getBankNumber() {
		return this.bankNumber;
	}

	public void setBankNumber(Integer bankNumber) {
		this.bankNumber = bankNumber;
	}

	@Column(name = "status", nullable = false)
	public boolean isStatus() {
		return this.status;
	}

	public void setStatus(boolean status) {
		this.status = status;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "shop_role", catalog = "multivendor", joinColumns = {
			@JoinColumn(name = "shopid", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "roleid", nullable = false, updatable = false) })
	public Set<Roleforuser> getRoleforusers() {
		return this.roleforusers;
	}

	public void setRoleforusers(Set<Roleforuser> roleforusers) {
		this.roleforusers = roleforusers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "shop")
	public Set<Product> getProducts() {
		return this.products;
	}

	public void setProducts(Set<Product> products) {
		this.products = products;
	}

}
